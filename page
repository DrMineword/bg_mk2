<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Home</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            font-family: Arial, sans-serif;
            transition: background-color 0.3s, color 0.3s;
            margin: 0;
            padding: 20px;
        }
        .box {
            padding: 15px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            margin: 10px 0;
            max-width: 400px;
            width: 100%;
        }
        .redirect {
            padding: 15px;
            border: 1px solid #fff;
            margin: 10px 0;
            width: 90%;
            max-width: 500px;
        }
        .redirect img {
            max-width: 100%;
            height: auto;
            margin-top: 10px;
        }
        .version {
            position: fixed;
            bottom: 10px;
            right: 10px;
            font-size: 12px;
            opacity: 0.8;
        }
    </style>
</head>
<body>

    <div id="content"></div>
    <div id="redirects"></div>
    <div class="version" id="version">Loading...</div>

    <script>
        // Function to store console logs in localStorage (bg_mk2_arr)
        function logToStorage(message) {
            let logs = JSON.parse(localStorage.getItem("bg_mk2_arr") || "[]");
            logs.push(`[${new Date().toISOString()}] ${message}`);
            localStorage.setItem("bg_mk2_arr", JSON.stringify(logs));
            console.log(message);
        }

        // Function to generate unique URL parameter
        function generateRandomQuery() {
            return `?u=${Math.floor(Math.random() * 100000)}_#${Math.random().toString(36).substring(2, 8)}`;
        }

        // Function to check if data needs refreshing
        function shouldRefresh(key, timeout) {
            let savedTime = localStorage.getItem(key + "-time");
            return !savedTime || Date.now() > parseInt(savedTime);
        }

        // Function to get URL from localStorage or generate a new one
        function getOrGenerateUrl(key, baseUrl, timeout) {
            if (shouldRefresh(key, timeout)) {
                let newUrl = baseUrl + generateRandomQuery();
                localStorage.setItem(key, newUrl);
                localStorage.setItem(key + "-time", Date.now() + timeout);
                logToStorage(`Updated ${key}: ${newUrl}`);
                return newUrl;
            }
            return localStorage.getItem(key);
        }

        // Fetch JSON with caching logic
        function fetchWithCache(urlKey, url, timeout, callback) {
            let fetchUrl = getOrGenerateUrl(urlKey, url, timeout);
            fetch(fetchUrl)
                .then(response => response.json())
                .then(data => {
                    localStorage.setItem(urlKey, JSON.stringify(data));
                    callback(data);
                })
                .catch(err => logToStorage(`Error loading ${urlKey}: ${err}`));
        }

        // Load version data
        function loadVersion() {
            let versionUrl = getOrGenerateUrl("load-version", "https://drmineword.github.io/bg_mk2/version", 0);
            fetch(versionUrl)
                .then(response => response.json())
                .then(data => {
                    document.getElementById("version").innerText = `${data.type}-${data.version}-${data.model_version}`;
                    
                    let lastSha = localStorage.getItem("console-sha");
                    if (!lastSha || lastSha !== data.console_sha) {
                        logToStorage(`Console SHA changed: ${data.console_sha}, resetting stored URLs`);
                        localStorage.setItem("console-sha", data.console_sha);
                        localStorage.removeItem("load-home");
                        localStorage.removeItem("load-redirects");
                    }
                    
                    loadHome();
                    loadRedirects();
                })
                .catch(err => logToStorage(`Error loading version: ${err}`));
        }

        // Load home page structure
        function loadHome() {
            fetchWithCache("load-home", "https://drmineword.github.io/bg_mk2/contents/main/home", 7 * 60 * 1000, data => {
                document.body.style.backgroundColor = data.background_color || "#222";
                document.body.style.color = data.text_color || "#fff";
                let contentDiv = document.getElementById("content");
                contentDiv.innerHTML = "";
                data.sections.forEach(section => {
                    let element = document.createElement("div");
                    element.innerHTML = section.html;
                    contentDiv.appendChild(element);
                });
            });
        }

        // Load redirect list
        function loadRedirects() {
            fetchWithCache("load-redirects", "https://drmineword.github.io/bg_mk2/contents/main/redirects", 7 * 60 * 1000, data => {
                let redirectsDiv = document.getElementById("redirects");
                redirectsDiv.innerHTML = "";
                data.forEach(item => {
                    let redirectDiv = document.createElement("div");
                    redirectDiv.className = "redirect";
                    redirectDiv.innerHTML = `<h3>${item.title}</h3>
                        <a href="${item.url}" target="_blank">Go to ${item.title}</a>
                        ${item.description ? `<div>${item.description}</div>` : ""}
                        ${item.image ? `<img src="${item.image}" alt="${item.title}">` : ""}`;
                    redirectsDiv.appendChild(redirectDiv);
                });
            });
        }

        loadVersion();
    </script>

</body>
</html>
